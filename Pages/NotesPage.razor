@page "/"

@using Microsoft.EntityFrameworkCore
@using SecureNote.Models
@using SecureNote.Data
@inject IDbContextFactory<SecureNoteContext> DbFactory

<PageTitle>Notes</PageTitle>

<h1>Notes</h1>

<div class="container">
    <div class="row">
        <div class="col-2">
            <ul class="list-group">
                @foreach (var item in notesList)
                {
                    <li class="list-group-item" @onclick="() => note = item">@item.Title</li>
                }
            </ul>
        </div>
        <div class="col">
            <form>
                <div class="mb-3">
                    <label class="form-label">Title</label>
                    <input type="text" class="form-control" @bind="note.Title">
                </div>
                <div class="mb-3">
                    <label class="form-label">Content</label>
                    <textarea class="form-control" rows="10" @bind="note.Content" />
                </div>
                <button type="submit" class="btn btn-primary" @onclick="SaveNoteAsync">Submit</button>
            </form>
        </div>
    </div>
</div>

@code
{
    Note note = new();
    Note Note
    {
        get => note;
        set
        {
            note = value;
            Console.WriteLine(value);
        }
    }
    List<Note> notesList = new();

    protected override void OnInitialized()
    {
        GetAllNotesAsync();
        base.OnInitialized();
    }

    async Task SaveNoteAsync()
    {
        using var context = DbFactory.CreateDbContext();
        context.Add(note);
        await context.SaveChangesAsync();
    }

    void GetAllNotesAsync()
    {
        using var context = DbFactory.CreateDbContext();
        notesList = context.Notes.ToList();
    }
}